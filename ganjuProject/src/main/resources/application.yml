spring:
  profiles:
    active: local
    group:
      local: common, secret
---

spring:
  output:
    ansi:
      enabled: always
  config:
    activate:
      on-profile: common
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ganjudb?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: 1234

  sql:
    init:
      mode: always

  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    database: mysql
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        jdbc:
          time_zone: Asia/Seoul
        format_sql: true

    defer-datasource-initialization: true
  security:
    oauth2:
      client:
        registration:
          google: # /oauth2/authorization/google 이 주소를 동작하게 한다.
            client-id:
            client-secret:
            scope:
              - email
              - profile
              # 네이버는 OAuth2.0 공식 지원대상이 아니라서 provider 설정이 필요하다.
              # 요청주소도 다르고, 응답 데이터도 다르기 때문이다.
          naver:
            client-id:
            client-secret:
            scope:
              - email
              - mobile
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8081/login/oauth2/code/naver

          kakao:
            client-id:
            client-secret: 
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: # https://developers.kakao.com/docs/latest/ko/kakaologin/common#user-info
              - account_email
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-name: Kakao

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id # Kakao 응답 값 id, connected_at, properties, kakao_account 중 id 지정
server:
  port: 8081

cloud:
  aws:
    s3:
      bucket: ganju-test
    credentials:
      access-key:
      secret-key:
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false
